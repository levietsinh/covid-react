{"version":3,"sources":["api/index.js","components/CountrySelector/index.js","components/HighLight/index.js","components/Summary/index.js","components/Global/HighLight/index.js","components/Global/index.js","components/Global/Vietnam/index.js","components/Footer/index.js","components/Loading/index.js","App.js","index.js"],"names":["getReportByCountry","country","axios","get","useStyles","makeStyles","countrySelector","marginBottom","selectorRoot","borderBottom","selector","CountrySelector","value","handleOnChange","countries","classes","FormControl","className","InputLabel","htmlFor","shrink","NativeSelect","variant","onChange","inputProps","name","id","root","select","map","index","ISO2","toLowerCase","Country","FormHelperText","useStyle","highLight","cardDeaths","borderTop","cardConfirmed","cardRecovered","summaryTitleConfirmed","fontSize","fontWeight","color","summaryTitleRecovered","summaryTitleDeaths","summarySubTitleConfirmed","summarySubTitleRecovered","summarySubTitleDeaths","HighLight","report","data","length","summary","title","count","Confirmed","type","Recovered","Deaths","Grid","container","spacing","item","sm","xs","Card","CardContent","Typography","component","end","duration","separator","button","margin","highcharts","border","padding","borderRadius","Summary","useState","option","setOption","dayRange","setDayRange","useEffect","dayRangeReport","slice","chart","height","text","xAxis","categories","moment","Date","format","crosshair","colors","yAxis","min","labels","align","tooltip","headerFormat","pointFormat","footerFormat","shared","useHTML","plotOptions","column","pointPadding","borderWidth","series","getGenerateOptions","Button","onClick","HighCharts","options","React","memo","paddingBottom","summaryTitle","cardNew","summaryTitleNew","summarySubTitleNew","Global","summaryInfo","TotalConfirmed","TotalRecovered","TotalDeaths","NewConfirmed","areaTitle","globalReport","styles","Vietnam","vietnamReport","vietnamSummary","Footer","Loading","App","setCountries","countryId","setCountryId","setReport","setGlobalReport","setVietnamReport","setVietnamSummary","then","res","sort","Countries","find","Slug","Container","style","fontFamily","e","target","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.13ad0553.chunk.js","sourcesContent":["import axios from \"axios\"\r\nexport const getSummary = () => axios.get('https://api.covid19api.com/summary');\r\nexport const getCountries = () => axios.get('https://api.covid19api.com/countries');\r\nexport const getReportByCountry = (country) => axios.get(`https://api.covid19api.com/dayone/country/${country}`)","import React from 'react'\r\nimport { FormControl, FormHelperText, InputLabel, makeStyles, NativeSelect, Typography } from '@material-ui/core'\r\n\r\nconst useStyles = makeStyles({\r\n  countrySelector: {\r\n    marginBottom: 16,\r\n  },\r\n  selectorRoot: {\r\n    '&::before': {\r\n      borderBottom: 'unset'\r\n    }\r\n  },\r\n  selector: {\r\n    '&:focus': {\r\n    }\r\n  }\r\n})\r\nexport default function CountrySelector({ value, handleOnChange, countries }) {\r\n  const classes = useStyles()\r\n  return (\r\n    <FormControl className={classes.countrySelector}>\r\n      <InputLabel htmlFor=\"countries-select\" shrink>Quốc gia</InputLabel>\r\n      <NativeSelect\r\n        variant='outlined'\r\n        value={value}\r\n        onChange={handleOnChange}\r\n        inputProps={{\r\n          name: \"countries\",\r\n          id:'countries-select'\r\n        }}\r\n        classes={{root: classes.selectorRoot, select: classes.selector}}\r\n      >\r\n        {countries.map((country, index) => {\r\n          return <option value={country.ISO2.toLowerCase()} key={country.ISO2}>{ country.Country }</option>\r\n      })}\r\n      </NativeSelect>\r\n      <FormHelperText>Lựa chọn quốc gia</FormHelperText>\r\n    </FormControl>\r\n  )\r\n}\r\n","import { Card, CardContent, Grid, makeStyles, Typography } from '@material-ui/core'\r\nimport React from 'react'\r\nimport Countup from 'react-countup'\r\n\r\nconst useStyle = makeStyles({\r\n  highLight: {\r\n    marginBottom: 20\r\n  },\r\n  cardDeaths: {\r\n    borderTop: \"6px solid grey\"\r\n  },\r\n  cardConfirmed: {\r\n    borderTop: \"6px solid red\"\r\n  },\r\n  cardRecovered: {\r\n    borderTop: \"6px solid green\"\r\n  },\r\n\r\n  summaryTitleConfirmed: {\r\n    fontSize: 18,\r\n    fontWeight: 'bold',\r\n    color: 'red'\r\n  },\r\n  summaryTitleRecovered: {\r\n    fontSize: 18,\r\n    fontWeight: 'bold',\r\n    color: 'green'\r\n  },\r\n  summaryTitleDeaths: {\r\n    fontSize: 18,\r\n    fontWeight: 'bold',\r\n    color: 'grey'\r\n  },\r\n  summarySubTitleConfirmed: {\r\n    fontSize: 16,\r\n    fontWeight: 'bold',\r\n    color: 'red'\r\n  },\r\n  summarySubTitleRecovered: {\r\n    fontSize: 16,\r\n    fontWeight: 'bold',\r\n    color: 'green'\r\n  },\r\n  summarySubTitleDeaths: {\r\n    fontSize: 16,\r\n    fontWeight: 'bold',\r\n    color: 'grey'\r\n  }\r\n})\r\nexport default function HighLight({ report }) {\r\n  const classes = useStyle()\r\n  const data = report ? report[report.length -1] : []\r\n  const summary = [\r\n    {\r\n      title: 'Tổng số ca nhiễm',\r\n      count: data && data.Confirmed ? data.Confirmed : 0,\r\n      type: 'confirmed'\r\n    },\r\n    {\r\n      title: 'Số ca khỏi',\r\n      count: data && data.Recovered ? data.Recovered : 0,\r\n      type: 'recovered'\r\n    },\r\n    {\r\n      title: 'Số ca tử vong',\r\n      count: data && data.Deaths ? data.Deaths : 0,\r\n      type: 'deaths'\r\n    },\r\n  ]\r\n  return (\r\n    <Grid container spacing={3} className={classes.highLight}>\r\n      {\r\n        summary.map((item,index) => \r\n          (\r\n          <Grid item sm={4} xs={12} key={index}>\r\n            <Card classes={{\r\n              root: item.type === 'confirmed' ? classes.cardConfirmed :\r\n              (item.type === 'recovered' ? classes.cardRecovered : classes.cardDeaths)\r\n              }}>\r\n                <CardContent>\r\n                <Typography component=\"p\" variant=\"body2\"\r\n                className={\r\n                  item.type === 'confirmed' ? classes.summaryTitleConfirmed :\r\n                    (item.type === 'recovered' ? classes.summaryTitleRecovered : classes.summaryTitleDeaths)}\r\n                >{item.title}</Typography>\r\n                <Typography component=\"span\" variant=\"body2\"\r\n                className={\r\n                  item.type === 'confirmed' ? classes.summarySubTitleConfirmed :\r\n                    (item.type === 'recovered' ? classes.summarySubTitleRecovered : classes.summarySubTitleDeaths)}\r\n                >\r\n                    {item.count > 0 ? <Countup end={ item.count || 0} duration={2} separator='.' /> : 'N/A'}\r\n                  </Typography>\r\n                </CardContent>\r\n              </Card>\r\n            </Grid>\r\n          )\r\n        )\r\n      }\r\n    </Grid>\r\n  )\r\n}\r\n","import HighchartsReact from 'highcharts-react-official'\r\nimport React from 'react'\r\nimport HighCharts from 'highcharts'\r\nimport { useState, useEffect } from 'react'\r\nimport moment from 'moment'\r\nimport { Button, makeStyles } from '@material-ui/core'\r\n\r\nconst useStyle = makeStyles({\r\n  button: {\r\n    margin: \"0 12px\"\r\n  },\r\n  highcharts: {\r\n    marginBottom: 24,\r\n    border: \"2px solid #ccc\",\r\n    padding: 8,\r\n    borderRadius: 8,\r\n  }\r\n})\r\nconst getGenerateOptions = (data) => {\r\n  const categories = data.map(item => moment(item.Date).format('DD/MM/YYYY'));\r\n  return {\r\n    chart: {\r\n      height: 500,\r\n    },\r\n    title: {\r\n      text: 'Tổng ca nhiễm',\r\n    },\r\n    xAxis: {\r\n      categories: categories,\r\n      crosshair: true,\r\n    },\r\n    colors: ['#F3585B'],\r\n    yAxis: {\r\n      min: 0,\r\n      title: {\r\n        text: null,\r\n      },\r\n      labels: {\r\n        align: 'right',\r\n      },\r\n    },\r\n    tooltip: {\r\n      headerFormat: '<span style=\"font-size:10px\">{point.key}</span><table>',\r\n      pointFormat:\r\n        '<tr><td style=\"color:{series.color};padding:0\">{series.name}: </td>' +\r\n        '<td style=\"padding:0\"><b>{point.y} ca</b></td></tr>',\r\n      footerFormat: '</table>',\r\n      shared: true,\r\n      useHTML: true,\r\n    },\r\n    plotOptions: {\r\n      column: {\r\n        pointPadding: 0.2,\r\n        borderWidth: 0,\r\n      },\r\n    },\r\n    series: [\r\n      {\r\n        name: 'Tổng Ca nhiễm',\r\n        data: data.map((item) => item.Confirmed),\r\n      },\r\n    ],\r\n  }\r\n}\r\nconst Summary = ({ data, report }) => {\r\n  const classes = useStyle();\r\n  const [option, setOption] = useState({});\r\n  const [dayRange, setDayRange] = useState('all')\r\n\r\n  useEffect(() => {\r\n    let dayRangeReport = [];\r\n    switch (dayRange) {\r\n      case 'all':\r\n        dayRangeReport = report;\r\n        break;\r\n      case '30':\r\n        dayRangeReport = report.slice(report.length - 30);\r\n        break;\r\n      case '7':\r\n        dayRangeReport = report.slice(report.length - 7);\r\n        break;\r\n      default:\r\n        dayRangeReport = report;\r\n    } \r\n    setOption(getGenerateOptions(dayRangeReport))\r\n  }, [report, dayRange])\r\n  return (\r\n    <div className={classes.highcharts}>\r\n      <Button variant=\"contained\" color={dayRange === 'all' ? 'primary' : ''} onClick={() => setDayRange('all')}>Tất cả</Button>\r\n      <Button className={classes.button} variant=\"contained\" color={dayRange === '30' ? 'primary' : ''} onClick={() => setDayRange('30')}>30 ngày</Button>\r\n      <Button variant=\"contained\" color={dayRange === '7' ? 'primary' : ''} onClick={() => setDayRange('7')}>7 ngày</Button>\r\n      <HighchartsReact\r\n        highcharts={HighCharts}\r\n        options={option}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default React.memo(Summary);","import { Card, CardContent, Grid, makeStyles, Typography } from '@material-ui/core'\r\nimport React from 'react'\r\nimport CountUp from 'react-countup'\r\n\r\nconst useStyles = makeStyles({\r\n  highLight: {\r\n    marginBottom: 20,\r\n    paddingBottom: 16,\r\n    borderBottom: \"1px solid #ccc\"\r\n  },\r\n  summaryTitle: {\r\n    fontSize: 18,\r\n    fontWeight: 600\r\n  },\r\n  cardConfirmed: {\r\n    borderTop: \"6px solid red\"\r\n  },\r\n  cardDeaths: {\r\n    borderTop: \"6px solid grey\"\r\n  },\r\n  cardNew: {\r\n    borderTop: \"6px solid orange\"\r\n  },\r\n  cardRecovered: {\r\n    borderTop: \"6px solid green\"\r\n  },\r\n  summaryTitleConfirmed: {\r\n    fontSize: 18,\r\n    fontWeight: 'bold',\r\n    color: 'red'\r\n  },\r\n  summaryTitleNew: {\r\n    fontSize: 18,\r\n    fontWeight: 'bold',\r\n    color: 'orange'\r\n  },\r\n  summaryTitleRecovered: {\r\n    fontSize: 18,\r\n    fontWeight: 'bold',\r\n    color: 'green'\r\n  },\r\n  summaryTitleDeaths: {\r\n    fontSize: 18,\r\n    fontWeight: 'bold',\r\n    color: 'grey'\r\n  },\r\n  summarySubTitleConfirmed: {\r\n    fontSize: 16,\r\n    fontWeight: 'bold',\r\n    color: 'red'\r\n  },\r\n  summarySubTitleNew: {\r\n    fontSize: 16,\r\n    fontWeight: 'bold',\r\n    color: 'orange'\r\n  },\r\n  summarySubTitleRecovered: {\r\n    fontSize: 16,\r\n    fontWeight: 'bold',\r\n    color: 'green'\r\n  },\r\n  summarySubTitleDeaths: {\r\n    fontSize: 16,\r\n    fontWeight: 'bold',\r\n    color: 'grey'\r\n  }\r\n})\r\nexport default function Global({ report }) {\r\n  const summaryInfo = [\r\n    {\r\n      title: 'Tổng số ca nhiễm',\r\n      count: report && report.TotalConfirmed > 0 ? report.TotalConfirmed : 0,\r\n      type: 'confirmed'\r\n    },\r\n    {\r\n      title: 'Số ca khỏi',\r\n      count: report && report.TotalRecovered > 0 ? report.TotalRecovered : 0,\r\n      type: 'recovered'\r\n    },\r\n    {\r\n      title: 'Số ca tử vong',\r\n      count: report && report.TotalDeaths > 0 ? report.TotalDeaths : 0,\r\n      type: 'deaths'\r\n    },\r\n    {\r\n      title: 'Số ca nhiễm mới',\r\n      count: report && report.NewConfirmed > 0 ? report.NewConfirmed : 0,\r\n      type: 'new'\r\n    },\r\n  ]\r\n  const classes = useStyles()\r\n  return (\r\n    <Grid container spacing={3} className={classes.highLight}>\r\n      {\r\n        summaryInfo.map((item,index) => \r\n          (\r\n          <Grid item sm={3} xs={12} key={index}>\r\n            <Card classes={{\r\n              root: item.type === 'confirmed' ?\r\n                classes.cardConfirmed : (item.type === 'deaths' ? classes.cardDeaths : (item.type === 'new' ? classes.cardNew : classes.cardRecovered))\r\n            }}>\r\n                <CardContent>\r\n                <Typography\r\n                  component=\"p\"\r\n                  variant=\"body2\"\r\n                  className={\r\n                    item.type === 'confirmed' ? classes.summaryTitleConfirmed :\r\n                      (item.type === 'recovered' ? classes.summaryTitleRecovered :\r\n                        (item.type === 'deaths' ? classes.summaryTitleDeaths : classes.summaryTitleNew))}\r\n                >{item.title}</Typography>\r\n                <Typography\r\n                  component=\"span\"\r\n                  variant=\"body2\"\r\n                  className={\r\n                    item.type === 'confirmed' ? classes.summarySubTitleConfirmed :\r\n                      (item.type === 'recovered' ? classes.summarySubTitleRecovered :\r\n                        (item.type === 'deaths' ? classes.summarySubTitleDeaths : classes.summarySubTitleNew))}\r\n                >\r\n                    {item.count > 0 ? <CountUp end={ item.count || 0} duration={2} separator='.' /> : 'N/A'}\r\n                  </Typography>\r\n                </CardContent>\r\n              </Card>\r\n            </Grid>\r\n          )\r\n        )\r\n      }\r\n    </Grid>\r\n  )\r\n}\r\n","import { makeStyles, Typography } from '@material-ui/core'\r\nimport React from 'react'\r\nimport HighLight from './HighLight/index'\r\nconst useStyle = makeStyles({\r\n  areaTitle: {\r\n    fontSize: 20,\r\n    fontWeight: 'bold',\r\n    marginBottom: 12,\r\n  }\r\n})\r\nexport default function Global({ globalReport }) {\r\n  const styles = useStyle()\r\n  return (\r\n    <div className={styles}>\r\n      <Typography variant=\"body1\" component=\"p\" className={styles.areaTitle}>Thế giới</Typography>\r\n      <HighLight report={globalReport} />\r\n      <Typography variant=\"body1\" component=\"p\" className={styles.areaTitle}>Việt Nam</Typography>\r\n    </div>\r\n  )\r\n}\r\n","import { Typography } from '@material-ui/core'\r\nimport React from 'react'\r\nimport Summary from '../../Summary'\r\nimport HighLight from '../HighLight/index'\r\n \r\nexport default function Vietnam({ vietnamReport, vietnamSummary }) {\r\n  return (\r\n    <div>\r\n      <HighLight report={ vietnamReport } />\r\n      <Summary report={ vietnamSummary }/>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Footer() {\r\n  return (\r\n    <div>\r\n      Footer\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Loading() {\r\n  return (\r\n    <div>\r\n      Loading\r\n    </div>\r\n  )\r\n}\r\n","import { getCountries, getReportByCountry, getSummary } from \"./api\";\nimport { useState, useEffect } from 'react'\n\n//Components\nimport CountrySelector from \"./components/CountrySelector\";\nimport HighLight from \"./components/HighLight\";\nimport Summary from \"./components/Summary\";\nimport Global from \"./components/Global\";\nimport Vietnam from \"./components/Global/Vietnam\";\nimport Footer from \"./components/Footer\";\nimport Loading from \"./components/Loading\";\n\n//Material UI\nimport { Container, makeStyles, Typography } from \"@material-ui/core\";\nimport '@fontsource/roboto'\n\nconst useStyle = makeStyles({\n  areaTitle: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    marginBottom: 12,\n  }\n})\nfunction App() {\n  const [countries, setCountries] = useState([])\n  const [countryId, setCountryId] = useState('jp')\n  const [report, setReport] = useState([])\n  const [globalReport, setGlobalReport] = useState([])\n  const [vietnamReport, setVietnamReport] = useState([])\n  const [vietnamSummary, setVietnamSummary] = useState([])\n  const classes = useStyle()\n\n  useEffect(() => {\n    getCountries().then(res => {setCountries(res.data.sort(item => item.ISO2 !== 'VN'))});\n    getSummary().then(res => {\n      setGlobalReport(res.data.Global);\n      setVietnamReport(res.data.Countries.find(item => item.Slug === 'vietnam'))\n    });\n    getReportByCountry('vietnam').then(res => setVietnamSummary(res.data))\n  }, [])\n  const handleOnChange = (e) => {\n    setCountryId(e.target.value)\n  }\n  useEffect(() => {\n    if (countryId && countries.length > 0) {\n      const {Slug} = countries.find(country => country.ISO2.toLowerCase() === countryId)\n      getReportByCountry(Slug).then(res => setReport(res.data))\n    }\n  }, [countries, countryId])\n  return (\n    <Container style={{fontFamily: 'Roboto'}}>\n      {\n        countries.length > 0 ? (\n          <>\n            <Global globalReport={ globalReport }/>\n            <Vietnam vietnamReport={vietnamReport} vietnamSummary={vietnamSummary} />\n            <Typography component=\"p\" variant=\"body1\" className={classes.areaTitle}>Các nước khác</Typography>\n            <CountrySelector countries={countries} handleOnChange={handleOnChange} value={ countryId }/>\n            <HighLight report={report} />\n            <Summary report={report} />\n            <Footer/>\n          </>\n        ) : <Loading/>\n      }\n    </Container>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}